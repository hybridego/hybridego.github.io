[{"objectID":"7a3dc1066e80f4385cae00a83616ce88","title":"The Bitter Lesson","tags":["AI","Machine Learning","Rich Sutton","Bitter Lesson","Research"],"categories":["Tech"],"description":"Rich Sutton의 \u0026#39;The Bitter Lesson\u0026#39;을 한국어로 요약해 보았습니다.","summary":"\u003ch3 id=\"리치-서튼의-쓴-교훈the-bitter-lesson-요약\"\u003e리치 서튼의 \u0026ldquo;쓴 교훈(The Bitter Lesson)\u0026rdquo; 요약\u003c/h3\u003e\n\u003cp\u003e리치 서튼(Rich Sutton)이 2019년에 발표한 이 에세이는 AI 연구 70년의 역사를 바탕으로 한 핵심 교훈을 다룬다. \u003cstrong\u003e주요 논지\u003c/strong\u003e: AI 개발에서 인간 지식이나 도메인 전문성을 시스템에 주입하 …\u003c/p\u003e","date":"2025-10-26","publishdate":"2025-10-26","permalink":"https://hybridego.github.io/2025/10/26/The-Bitter-Lesson/","relpermalink":"/2025/10/26/The-Bitter-Lesson/","section":"post"},{"objectID":"372753fc592840d3610a6009cca6eb95","title":"Time 해상도 체크","tags":["usleep","sleep","chrono","nanoseconds","microseconds","milliseconds"],"categories":["Tech"],"description":"usleep, sleep으로 time 해상도를 체크 해봅니다. 시스템에서 최대 시간 해상도를 확인해봅니다.","summary":"\u003cdiv class=\"highlight\"\u003e\n    \u003cdiv class=\"code-toolbar\"\u003e\n        \u003cbutton class=\"copy-code-button\" title=\"Copy to clipboard\"\u003e\n            \u003ci class=\"fas fa-copy\"\u003e\u003c/i\u003e\n        \u003c/button\u003e\n    \u003c/div\u003e\n    \u003cpre\u003e\u003ccode class=\"\"\u003e#include \u0026lt;iostream\u0026gt;\r\n#include \u0026lt;unistd.h\u0026gt;\r\n#include \u0026lt;ctime\u0026gt;\r\n#include \u0026lt;chrono\u0026gt;\r\n\r\nint …\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","date":"2025-10-17","publishdate":"2025-10-17","permalink":"https://hybridego.github.io/2025/10/17/sleep-time-check/","relpermalink":"/2025/10/17/sleep-time-check/","section":"post"},{"objectID":"6a1938c4c6c7a9fdef6881d99edfb4c7","title":"GitHub 프로젝트 분석 툴 소개","tags":["GitHub","분석","AI","개발툴","GitIngest","DeepWiki","GitDiagram"],"categories":["Tech"],"description":"GitHub 리포지토리 분석을 위한 세 가지 강력한 툴, GitIngest, DeepWiki, GitDiagram을 소개합니다.","summary":"\u003cp\u003e\u003ccode\u003eGitHub 리포지토리를 더욱 효과적으로 분석하고 이해하는 데 도움을 줄 수 있는 세 가지 흥미로운 툴을 소개합니다. 이 툴들은 각각 다른 방식으로 리포지토리의 정보를 추출하고 시각화하여 개발자들의 생산성을 높여줄 수 있습니다.\u003c/code\u003e\u003c/p\u003e","date":"2025-09-18","publishdate":"2025-09-18","permalink":"https://hybridego.github.io/2025/09/18/github-project-analyzer/","relpermalink":"/2025/09/18/github-project-analyzer/","section":"post"},{"objectID":"16008024acf17567272ab527873695de","title":"PulseAudio 사용 multicast 구현","tags":["linux","pipeWire","ALSA","pulseAudio","JACK"],"categories":"Tech","description":"pipewire 기반 pulseAudio 인터페이스","summary":"\u003col\u003e\n\u003cli\u003ebuildroot 에 pulseaudio 추가 하고 빌드\u003c/li\u003e\n\u003cli\u003eoutput/nt98567/nt98567 에서\nfd pulse 로 찾음\u003c/li\u003e\n\u003cli\u003e다음의 파일들을 해당 rootfs 위치로 복사\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\n    \u003cdiv class=\"code-toolbar\"\u003e\n        \u003cbutton class=\"copy-code-button\" title=\"Copy to clipboard\"\u003e\n            \u003ci class=\"fas fa-copy\"\u003e\u003c/i\u003e\n        \u003c/button\u003e\n    \u003c/div\u003e\n    \u003cpre\u003e\u003ccode class=\"\"\u003e$ fd pulse …\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","date":"2025-08-10","publishdate":"2025-08-10","permalink":"https://hybridego.github.io/2025/08/10/pulseAudio/","relpermalink":"/2025/08/10/pulseAudio/","section":"post"},{"objectID":"01203b1518b93b47b7076b15a633f506","title":"PipeWire - 리눅스 오디오의 새로운 표준","tags":["linux","pipeWire","ALSA","pulseAudio","JACK"],"categories":"Tech","description":"PipeWire의 탄생 배경, 발전 과정, 주요 채택 사례와 함께, 기존 PulseAudio·JACK 대비 강점 및 리눅스 오디오 환경에서의 혁신적 변화를 소개합니다.","summary":"\u003ch1 id=\"pipewire\"\u003ePipeWire\u003c/h1\u003e\n\u003ch2 id=\"pipewire의-히스토리\"\u003ePipeWire의 히스토리\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e연도\u003c/th\u003e\n          \u003cth\u003e주요 사건\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e2015\u003c/td\u003e\n          \u003ctd\u003eWim Taymans가 개발 시작, 초기 명칭은 PulseVideo/Pinos …\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e","date":"2025-07-20","publishdate":"2025-07-16","permalink":"https://hybridego.github.io/2025/07/16/pipeWire/","relpermalink":"/2025/07/16/pipeWire/","section":"post"},{"objectID":"470ab3bd863085c1dec5efa7a2936316","title":"Snap, Flatpak, AppImage의 차이와 장단점 비교","tags":["linux","snap","flatpak","appImage"],"categories":"Tech","description":"Snap, Flatpak, AppImage의 설치 방식, 샌드박스 보안, 업데이트 지원, 사용 사례 등 핵심 차이를 한눈에 정리합니다.","summary":"\u003ch1 id=\"snap-flatpak-appimage-비교-장단점과-차이점\"\u003eSnap, Flatpak, AppImage 비교: 장단점과 차이점\u003c/h1\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e항목\u003c/th\u003e\n          \u003cth\u003eSnap\u003c/th\u003e\n          \u003cth\u003eFlatpak\u003c/th\u003e\n          \u003cth\u003eAppImage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e주 개발 주체 …\u003c/strong\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e","date":"2025-07-16","publishdate":"2025-07-16","permalink":"https://hybridego.github.io/2025/07/16/snap-flatpak-appImage/","relpermalink":"/2025/07/16/snap-flatpak-appImage/","section":"post"},{"objectID":"1a19bd99398517d4c6b6b821374d2425","title":"How to Use do-while Loops in Shell Scripts","tags":["linux","shell","do-while"],"categories":"Tech","description":"Bash에서 do-while 패턴을 사용하여 무한 루프를 구현하고, 시스템 정보를 주기적으로 확인하는 방법을 소개합니다.","summary":"\u003ch1 id=\"how-to-use-do-while-loops-in-shell-scripts\"\u003eHow to Use do-while Loops in Shell Scripts\u003c/h1\u003e\n\u003ch2 id=\"practical-examples-of-infinite-loops-in-bash\"\u003ePractical Examples of Infinite Loops in Bash\u003c/h2\u003e\n\u003ch3 id=\"bash에서-do-while-패턴을-사용하여-무한-루프를-구현하고-시스템-정보를-주기적으로-확인하는-방법을-소개합니다\"\u003eBash에서 do-while 패턴을 사용하여 무한 루프를 구현하고, 시스템 정보를 주기적으로 확인하는 방법을 소개합니다. …\u003c/h3\u003e","date":"2025-07-09","publishdate":"2025-07-09","permalink":"https://hybridego.github.io/2025/07/04/How_to_use_do_while_in_shell/","relpermalink":"/2025/07/04/How_to_use_do_while_in_shell/","section":"post"},{"objectID":"99fdeb57560b2d8e239b06eb63f4aa33","title":"How to Check the C++ Version in Use","tags":["linux","cpp","c++","g++"],"categories":"Tech","description":"g++ 명령어로 현재 사용 중인 C++ 표준 버전을 쉽게 확인하는 방법을 안내합니다.","summary":"\u003ch1 id=\"c-표준-버전-확인하기\"\u003eC++ 표준 버전 확인하기\u003c/h1\u003e\n\u003cpre\u003e\u003ccode\u003eg++ -std=c++14 -E -dM -x c++ /dev/null | grep '__cplusplus'\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e이 명령은 g++ 컴파일러가 인식하는 C++ 표준 버전을 확인하는 명령입니다. 각 옵션의 역할은 다음과 같습니다:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eg++: GNU C++ 컴파일러를 …\u003c/li\u003e\u003c/ul\u003e","date":"2025-07-09","publishdate":"2025-07-09","permalink":"https://hybridego.github.io/2025/07/04/Cpp_version_check/","relpermalink":"/2025/07/04/Cpp_version_check/","section":"post"},{"objectID":"992b26a8dcabaf426f148198a416d68f","title":"High-Performance I/O in Unix Systems","tags":["linux","bsd","io","system-calls","performance"],"categories":"Tech","description":"Understanding high-performance I/O functions like readv(), writev(), splice(), sendfile(), and more in Linux and BSD","summary":"\u003ch1 id=\"고성능-io를-위한-유닉스-시스템-호출-가이드\"\u003e고성능 I/O를 위한 유닉스 시스템 호출 가이드\u003c/h1\u003e\n\u003cp\u003e유닉스 계열 운영 체제(리눅스, BSD 등)에서 고성능 I/O 작업은 대용량 데이터 전송, 네트워크 서버, 데이터 스트리밍 등에서 필수적입니다. 이번 포스팅에서는 \u003ccode\u003ereadv()\u003c/code\u003e, \u003ccode\u003ewritev()\u003c/code\u003e, \u003ccode\u003esplice()\u003c/code\u003e, \u003ccode\u003esendfile()\u003c/code\u003e, …\u003c/p\u003e","date":"2025-07-04","publishdate":"2025-07-04","permalink":"https://hybridego.github.io/2025/07/04/High-Performance-IO-in-Unix-Systems/","relpermalink":"/2025/07/04/High-Performance-IO-in-Unix-Systems/","section":"post"},{"objectID":"00408b3928188fe2d90619b4db68e308","title":"Buildroot Package version up","tags":["linux","buildroot"],"categories":"Tech","description":"최신 버전으로 packager 버전을 올리는 방법","summary":"\u003ch1 id=\"buildroot-version-변경하는-방법\"\u003ebuildroot version 변경하는 방법\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\n    \u003cdiv class=\"code-toolbar\"\u003e\n        \u003cbutton class=\"copy-code-button\" title=\"Copy to clipboard\"\u003e\n            \u003ci class=\"fas fa-copy\"\u003e\u003c/i\u003e\n        \u003c/button\u003e\n    \u003c/div\u003e\n    \u003cpre\u003e\u003ccode class=\"\"\u003emake nt98567_buildroot_defconfig\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\n    \u003cdiv class=\"code-toolbar\"\u003e\n        \u003cbutton class=\"copy-code-button\" title=\"Copy to clipboard\"\u003e\n            \u003ci class=\"fas fa-copy\"\u003e\u003c/i\u003e\n        \u003c/button\u003e\n    \u003c/div\u003e\n    \u003cpre\u003e\u003ccode class=\"\"\u003emake …\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","date":"2025-07-04","publishdate":"2025-07-04","permalink":"https://hybridego.github.io/2025/07/04/Buildroot-package-version-up/","relpermalink":"/2025/07/04/Buildroot-package-version-up/","section":"post"},{"objectID":"bfd8c3a4c7dc9333251a7ec0d2b6d92c","title":"linux 에서 시스템 Buff and Cache 비우기","tags":["linux","drop_caches","stress"],"categories":"Tech","description":"강제로 캐시를 비우게 한다.","summary":"\u003ch1 id=\"linux-에서-시스템-buff-and-cache-비우기\"\u003elinux 에서 시스템 Buff and Cache 비우기\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e/proc/sys/vm/drop_caches 사용\n리눅스 커널은 /proc/sys/vm/drop_caches 파일을 통해 캐시를 강제로 비울 수 있는 인터페이스를 제공합니다. 이 방법을 사용하려면 \u003cstrong\u003e루트 권한\u003c/strong\u003e이 필요합니다. …\u003c/li\u003e\u003c/ul\u003e","date":"2025-07-02","publishdate":"2025-07-02","permalink":"https://hybridego.github.io/2025/07/02/Empty-Buff-Cache/","relpermalink":"/2025/07/02/Empty-Buff-Cache/","section":"post"},{"objectID":"8526f62d41f1c1df49ef22b49f833782","title":"vscode remoteSSH용 docker 생성","tags":["docker","ssh","ternneling","remoteSSH","vscode"],"categories":"Tech","description":"docker를 만들고 ssh ternneling 으로 vscode retmoe ssh를 붙이는 방법","summary":"\u003ch1 id=\"vscode-remotessh용-docker-생성\"\u003evscode remoteSSH용 docker 생성\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e사용자에게 docker 권한 부여하기\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\n    \u003cdiv class=\"code-toolbar\"\u003e\n        \u003cbutton class=\"copy-code-button\" title=\"Copy to clipboard\"\u003e\n            \u003ci class=\"fas fa-copy\"\u003e\u003c/i\u003e\n        \u003c/button\u003e\n    \u003c/div\u003e\n    \u003cpre\u003e\u003ccode class=\"\"\u003esudo usermod -aG docker $USER\nnewgrp docker\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDockerfile 작성 …\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e","date":"2025-06-18","publishdate":"2025-06-18","permalink":"https://hybridego.github.io/2025/06/18/VSCode-RemoteSSH-Docker/","relpermalink":"/2025/06/18/VSCode-RemoteSSH-Docker/","section":"post"},{"objectID":"45b1a13fd5a818aa230791910b37b788","title":"Unicast, Broadcast, Multicast, SubnetMask","tags":["Unicast","Broadcast","Multicast","SubnetMask"],"categories":["Tech"],"description":"네트워크에서 유니캐스트(1:1), 멀티캐스트(1:N, 클래스D), 브로드캐스트(전체)와 서브넷 마스크(/xx) 개념을 이해하면 효율적 통신과 관리를 할 수 있다.","summary":"\u003ch1 id=\"유니캐스트-브로드캐스트-멀티캐스트와-서브넷-마스크\"\u003e유니캐스트, 브로드캐스트, 멀티캐스트와 서브넷 마스크\u003c/h1\u003e\n\u003ch2 id=\"1-유니캐스트와-멀티캐스트의-차이\"\u003e1. 유니캐스트와 멀티캐스트의 차이\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e유니캐스트(Unicast)\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e1:1 통신 방식\u003c/strong\u003e으로, 한 송신자가 한 수신자에게만 데이터를 전송합니다.\u003c/li\u003e\n\u003cli\u003e예시: 웹서핑, 이메일 등 대부분의 인터넷 통신\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e장점:\u003c/strong\u003e 신뢰성 있는 전송이 가능\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e단점:\u003c/strong\u003e 여러 수 …\u003c/li\u003e\u003c/ul\u003e","date":"2025-06-13","publishdate":"2025-06-13","permalink":"https://hybridego.github.io/2025/06/13/Unicast_Broadcast_Multicast_SubnetMask/","relpermalink":"/2025/06/13/Unicast_Broadcast_Multicast_SubnetMask/","section":"post"},{"objectID":"92766b3dfae36a856b461ac2973da1d4","title":"SNMP","tags":"SNMP","categories":"Tech","description":"SNMP의 기능에 대한 간략한 정리와 샘플 코드","summary":"\u003ch2 id=\"1-snmp-프로토콜로-할-수-있는-것은\"\u003e1. SNMP 프로토콜로 할 수 있는 것은?\u003c/h2\u003e\n\u003cp\u003eSNMP(Simple Network Management Protocol) 프로토콜을 사용하면 네트워크 관리자가 중앙에서 다양한 네트워크 장치(라우터, 스위치, 서버, 프린터 등)를 효과적으로 모니터링하고 관리할 수 있습니다. 구체적으로 …\u003c/p\u003e","date":"2025-06-13","publishdate":"2025-06-13","permalink":"https://hybridego.github.io/2025/06/13/SNMP/","relpermalink":"/2025/06/13/SNMP/","section":"post"},{"objectID":"5e4d5d8b5154b9b5f80e08f48f6e399e","title":"Hugo install","tags":["go","golang","hugo","github","github actions","github.io","blog"],"categories":["Tech"],"description":"간단히 Hugo를 설치하는 방법을 정리합니다.","summary":"\u003col\u003e\n\u003cli\u003e\n\u003cp\u003ehugo 설치\n\u003ccode\u003ewinget install Hugo.Hugo.Extended\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ehugo uninstall\n\u003ccode\u003ewinget uninstall --name \u0026quot;Hugo (Extended)\u0026quot;\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003esite 만들기 …\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e","date":"2025-05-26","publishdate":"2025-06-13","permalink":"https://hybridego.github.io/2025/06/13/Unicast_Broadcast_Multicast_SubnetMask/","relpermalink":"/2025/06/13/Unicast_Broadcast_Multicast_SubnetMask/","section":"post"},{"objectID":"423b7f7c37f2c89a90d13236bf1a16d4","title":"Cargo troubleshooting","tags":["cargo","rust","SSL Connection error"],"categories":["Tech"],"description":"cargo install 할 때 SSL 연결 에러 나는 문제 해결","summary":"\u003ch2 id=\"cargo-install-troubleshooting\"\u003eCargo install troubleshooting\u003c/h2\u003e\n\u003cp\u003ecargo로 뭐 설치하려고 할 때\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\n    \u003cdiv class=\"code-toolbar\"\u003e\n        \u003cbutton class=\"copy-code-button\" title=\"Copy to clipboard\"\u003e\n            \u003ci class=\"fas fa-copy\"\u003e\u003c/i\u003e\n        \u003c/button\u003e\n    \u003c/div\u003e\n    \u003cpre\u003e\u003ccode class=\"\"\u003ePS D:\\dev\\rust\u0026gt; rustup update\ninfo: syncing channel updates …\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","date":"2025-05-26","publishdate":"2025-05-26","permalink":"https://hybridego.github.io/2025/05/26/Cargo_troubleshooting/","relpermalink":"/2025/05/26/Cargo_troubleshooting/","section":"post"},{"objectID":"5e76d7a192bd314468267f789be02794","title":"Dioxus vs Tauri","tags":["Dioxus","Tauri","rust"],"categories":["Tech"],"description":"Dioxus 와 Tauri의 간단한 비교","summary":"\u003ch1 id=\"dioxus와-tauri-비교\"\u003eDioxus와 Tauri 비교\u003c/h1\u003e\n\u003ch2 id=\"dioxus란\"\u003eDioxus란?\u003c/h2\u003e\n\u003cp\u003eDioxus는 Rust로 작성된 풀스택 UI 프레임워크로, React와 유사한 선언적 프로그래밍 모델을 제공합니다. 웹, 데스크톱, 모바일, 서버사이드 렌더링(SSR), LiveView 등 다양한 플랫폼을 단일 코드베이스로 지원합니다. …\u003c/p\u003e","date":"2025-05-26","publishdate":"2025-05-26","permalink":"https://hybridego.github.io/2025/05/26/Dioxus_vs_Tauri/","relpermalink":"/2025/05/26/Dioxus_vs_Tauri/","section":"post"},{"objectID":"858ff867aaeb2a5fa180bd38270e43c2","title":"linux debugging","tags":["linux","debugging","debug","valgind","ASAN","LD_PRELOAD","RAII"],"categories":["Tech"],"description":"리눅스 디버깅 하는 몇가지 방법","summary":"\u003ch1 id=\"리눅스-환경에서의-메모리-디버깅-스킬\"\u003e리눅스 환경에서의 메모리 디버깅 스킬\u003c/h1\u003e\n\u003cp\u003e이 교육 자료는 리눅스 환경에서 메모리 관련 문제를 디버깅하는 데 필요한 핵심 개념과 도구를 다룹니다. 페이지, 페이지 폴트, 신호(SIGSEGV, SIGBUS), 댕글링 포인터, \u003ccode\u003e/proc\u003c/code\u003e 파일, OOM Killer, Shadow Memory, …\u003c/p\u003e","date":"2025-05-23","publishdate":"2025-05-23","permalink":"https://hybridego.github.io/2025/05/23/Linux_debugging_skil/","relpermalink":"/2025/05/23/Linux_debugging_skil/","section":"post"},{"objectID":"f3763ae50f78b87fd07a7fc992a89ee5","title":"Docker SSH tunneling","tags":["docker","ssh","tunneling","vscode","SSH Remote"],"categories":["Tech"],"description":"How to setup ssh tunneling to docker container.","summary":"\u003ch2 id=\"docker-와-ssh-터널링-설정\"\u003eDocker 와 ssh 터널링 설정\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e처음 실행 (필요한 디렉토리 mount 하고 이미지와 shell 선택, user 지정)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\n    \u003cdiv class=\"code-toolbar\"\u003e\n        \u003cbutton class=\"copy-code-button\" title=\"Copy to clipboard\"\u003e\n            \u003ci class=\"fas fa-copy\"\u003e\u003c/i\u003e\n        \u003c/button\u003e\n    \u003c/div\u003e\n    \u003cpre\u003e\u003ccode class=\"\"\u003edocker run -it \\\n  -v …\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","date":"2025-05-21","publishdate":"2025-05-21","permalink":"https://hybridego.github.io/2025/05/21/Docker_SSH_tunneling/","relpermalink":"/2025/05/21/Docker_SSH_tunneling/","section":"post"},{"objectID":"9a222376e06c23e34136430570438d7b","title":"Python uv","tags":["python","uv"],"categories":["Tech"],"description":"python uv 사용 방법","summary":"\u003ch1 id=\"python-uv-사용법\"\u003ePython UV 사용법\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e회사에서 uv python install 잘 안될 때\n사용 중인 네트워크(예: 회사 네트워크)가 Zscaler, Cisco Umbrella 같은 프록시를 통해 SSL 검사를 수행하고 있을 가능성이 높습니다. 이 경우, 프록시가 중간에 자체 인증서를 삽입하여 …\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e","date":"2025-05-16","publishdate":"2025-05-16","permalink":"https://hybridego.github.io/2025/05/16/Python_uv/","relpermalink":"/2025/05/16/Python_uv/","section":"post"},{"objectID":"2f05902e7435de187bb5303fb74f55e2","title":"Clean White Theme for Hugo","tags":[],"categories":[],"description":"\u003ch1 id=\"clean-white-theme-for-hugo\"\u003eClean White Theme for Hugo\u003c/h1\u003e\n\u003cp\u003eCleanWhite is a clean, elegant, but fully functional blog theme for Hugo. Here is a live \u003ca href=\"https://zhaohuabing.com\"\u003edemo site\u003c/a\u003e using this theme.\u003c/p\u003e\n\u003cp\u003eIt is based on …\u003c/p\u003e","summary":"\u003ch1 id=\"clean-white-theme-for-hugo\"\u003eClean White Theme for Hugo\u003c/h1\u003e\n\u003cp\u003eCleanWhite is a clean, elegant, but fully functional blog theme for Hugo. Here is a live \u003ca href=\"https://zhaohuabing.com\"\u003edemo site\u003c/a\u003e using this theme.\u003c/p\u003e\n\u003cp\u003eIt is based on …\u003c/p\u003e","date":"2019-01-09","publishdate":"2019-01-09","permalink":"https://hybridego.github.io/post/readme/","relpermalink":"/post/readme/","section":"post"},{"objectID":"419548ad13183dac6d96760c9815824b","title":"Istio v1alpha3 라우팅 API 소개","tags":["Istio"],"categories":["Tech"],"description":"Istio v1alpha3 라우팅 API 및 설계 원칙 소개","summary":"\u003cp\u003e지금까지 Istio는 RouteRule, DestinationPolicy, EgressRule, Ingress(Kubernetes의 Ingress 리소스를 직접 사용)의 네 가지 리소스를 포함하는 간단한 트래픽 관리 API를 제공했습니다. 이 API를 통해 사용자는 Istio 서비스 메 …\u003c/p\u003e","date":"2018-06-04","publishdate":"2018-06-04","permalink":"https://hybridego.github.io/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","relpermalink":"/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","section":"post"},{"objectID":"5419b65011b3dcb9020c0728e6d70695","title":"Istio 0.8 릴리스 발표","tags":["Istio"],"categories":["Tech"],"description":"6월 1일 아침, Istio 커뮤니티는 0.8 릴리스를 발표했습니다. 일반적인 버그 수정 및 성능 개선 외에, 이 어린이날 선물에는 어떤 기대할 만한 내용이 있을까요? 함께 살펴보겠습니다.","summary":"\u003cblockquote\u003e\n\u003cp\u003e6월 1일 아침, Istio 커뮤니티는 0.8 릴리스를 발표했습니다. 일반적인 버그 수정 및 성능 개선 외에, 이 어린이날 선물에는 어떤 기대할 만한 내용이 있을까요? 함께 살펴보겠습니다.\u003c/p\u003e\n\u003c/blockquote\u003e","date":"2018-06-02","publishdate":"2018-06-02","permalink":"https://hybridego.github.io/2018/06/02/istio08/","relpermalink":"/2018/06/02/istio08/","section":"post"},{"objectID":"acef740336515250f115284b46f1f096","title":"내 Ubuntu 데스크톱 설정에 대한 모든 것","tags":["ubuntu"],"categories":["Tips"],"description":"내 Ubuntu 데스크톱 설정에 대한 모든 것, 나중에 필요할 경우를 대비한 메모입니다.","summary":"\u003ch2 id=\"ssh-키-쌍-생성\"\u003eSSH 키 쌍 생성\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\n    \u003cdiv class=\"code-toolbar\"\u003e\n        \u003cbutton class=\"copy-code-button\" title=\"Copy to clipboard\"\u003e\n            \u003ci class=\"fas fa-copy\"\u003e\u003c/i\u003e\n        \u003c/button\u003e\n    \u003c/div\u003e\n    \u003cpre\u003e\u003ccode class=\"\"\u003essh-keygen -C \u0026#34;hybridego@gmail.com\u0026#34;\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003ch2 id=\"shadowsocks\"\u003eShadowsocks\u003c/h2\u003e\n\u003cp\u003eShadowsocks 설치 …\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e","date":"2018-05-24","publishdate":"2018-05-24","permalink":"https://hybridego.github.io/2018/05/24/set_up_my_ubuntu_desktop/","relpermalink":"/2018/05/24/set_up_my_ubuntu_desktop/","section":"post"},{"objectID":"bcf92db93ffdd43ba91e4322cf6c6ece","title":"마이크로서비스 보안 성찰록 3부","tags":["Microservice","Security"],"categories":["Tech"],"description":"일부 외부 타사 시스템은 시스템 내부의 마이크로서비스에 접근해야 할 수 있습니다. 예를 들어 온라인 상점의 경우, 외부 추천 서비스가 상점의 상품 카탈로그 정보를 얻기 위해 시스템에 연결해야 할 수 있습니다. 내부 서비스 간의 접근과 비교하여 외부 시스템의 접근은 엄격한 보안 제어가 필 …","summary":"\u003ch2 id=\"외부-시스템-접근-제어\"\u003e외부 시스템 접근 제어\u003c/h2\u003e\n\u003cp\u003e사용자 접근 및 마이크로서비스 간 상호 접근 외에도, 외부 타사 시스템도 시스템 내부의 마이크로서비스에 접근해야 할 수 있습니다. 예를 들어 이전 블로그의 온라인 상점 예시에서, 외부 추천 서비스가 상점의 상품 카탈로그 정보를 얻기 위해 시스템에 연결해야 할 수 …\u003c/p\u003e","date":"2018-05-23","publishdate":"2018-05-23","permalink":"https://hybridego.github.io/2018/05/23/external_system_auth/","relpermalink":"/2018/05/23/external_system_auth/","section":"post"},{"objectID":"d7d93ee7d2a2b13ec20c157389fd7a3a","title":"마이크로서비스 보안 성찰록 2부","tags":["Microservice","Security"],"categories":["Tech"],"description":"사용자로부터의 접근 요청 외에도, 마이크로서비스 애플리케이션 내의 각 마이크로서비스는 서로 많은 접근을 합니다. 애플리케이션 시스템 데이터의 민감도에 따라 시스템 내 마이크로서비스 접근에 대해서도 적절한 보안 제어가 필요합니다.","summary":"\u003ch2 id=\"서비스-간-인증-및-권한-부여\"\u003e서비스 간 인증 및 권한 부여\u003c/h2\u003e\n\u003cp\u003e사용자로부터의 접근 요청 외에도, 마이크로서비스 애플리케이션 내의 각 마이크로서비스는 서로 많은 접근을 합니다. 다음 시나리오를 포함합니다.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e사용자 간접적으로 트리거되는 마이크로서비스 간 상호 접근\u003cBR\u003e\n예를 들어 온라인 상점 애플리케이션에서 사용자가 장바구니 …\u003c/BR\u003e\u003c/li\u003e\u003c/ul\u003e","date":"2018-05-23","publishdate":"2018-05-23","permalink":"https://hybridego.github.io/2018/05/23/service_2_service_auth/","relpermalink":"/2018/05/23/service_2_service_auth/","section":"post"},{"objectID":"3fc17cbcf909103e423326182d72a807","title":"마이크로서비스 보안 성찰록 1부","tags":["Microservice","Security"],"categories":["Tech"],"description":"최근 마이크로서비스 보안 관련 기존 아이디어를 추가로 요약하고 정리하여, 이전 글에서 명확하지 않았던 부분, 예를 들어 서비스 간 인증 및 권한 부여, 서비스 호출 체인에서 사용자 신원 전달 등을 명확히 했습니다. 이 시리즈 블로그에서는 마이크로서비스 보안을 세 부분으로 나누어 체계적으 …","summary":"\u003cblockquote\u003e\n\u003cp\u003e최근 마이크로서비스 보안 관련 기존 아이디어를 추가로 요약하고 정리하여, 이전 글에서 명확하지 않았던 부분, 예를 들어 서비스 간 인증 및 권한 부여, 서비스 호출 체인에서 사용자 신원 전달 등을 명확히 했습니다.\u003c/p\u003e","date":"2018-05-23","publishdate":"2018-05-23","permalink":"https://hybridego.github.io/2018/05/22/user_authentication_authorization/","relpermalink":"/2018/05/22/user_authentication_authorization/","section":"post"},{"objectID":"61cbee2b7380aaa6e9b9f882840da6a0","title":"Istio 사이드카 자동 주입 원리","tags":["Kubernetes","Istio"],"categories":["Tech"],"description":"Kubernetes 1.9 버전은 Admission Webhook(웹 콜백) 확장 메커니즘을 도입했습니다. 웹훅을 통해 개발자는 Kubernetes API 서버의 기능을 매우 유연하게 확장하여 API 서버가 리소스를 생성할 때 리소스를 검증하거나 수정할 수 있습니다. Istio 0.7 …","summary":"\u003ch2 id=\"서론\"\u003e서론\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003eKubernetes 1.9 버전은 Admission Webhook(웹 콜백) 확장 메커니즘을 도입했습니다. 웹훅을 통해 개발자는 Kubernetes API 서버의 기능을 매우 유연하게 확장하여 API 서버가 리소스를 생성할 때 리소스를 검증하거나 수정할 수 있습니다.\u003c/p\u003e\n\u003cp\u003e웹훅 사용의 …\u003c/p\u003e","date":"2018-05-23","publishdate":"2018-05-23","permalink":"https://hybridego.github.io/2018/05/23/istio-auto-injection-with-webhook/","relpermalink":"/2018/05/23/istio-auto-injection-with-webhook/","section":"post"},{"objectID":"bf66956078def1376b24541987e8dd17","title":"Algolia를 사용하여 Gitpage 블로그에 사이트 내 검색 기능 제공","tags":["Jekyll:q","Bitcoin"],"categories":["Tech"],"description":"\u003cblockquote\u003e\n\u003cp\u003e이 일련의 기사는 \u0026ldquo;비트코인 및 암호화폐 기술\u0026rdquo; 온라인 강좌의 제 노트입니다.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"목차\"\u003e목차\u003c/h2\u003e\n\u003cp\u003e{:.no_toc}\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e목차\n{:toc}\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"스크루지-코인-거래\"\u003e스크루지 코인 거래\u003c/h2\u003e\n\u003cp\u003e스크루지 코인 프로그래밍 과제는 약간 까다롭습니다. 이 강의의 비디오는 일부 구현 세부 사항을 설명하지 않았습니다. …\u003c/p\u003e","summary":"\u003cblockquote\u003e\n\u003cp\u003e이 일련의 기사는 \u0026ldquo;비트코인 및 암호화폐 기술\u0026rdquo; 온라인 강좌의 제 노트입니다.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"목차\"\u003e목차\u003c/h2\u003e\n\u003cp\u003e{:.no_toc}\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e목차\n{:toc}\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"스크루지-코인-거래\"\u003e스크루지 코인 거래\u003c/h2\u003e\n\u003cp\u003e스크루지 코인 프로그래밍 과제는 약간 까다롭습니다. 이 강의의 비디오는 일부 구현 세부 사항을 설명하지 않았습니다. …\u003c/p\u003e","date":"2018-05-21","publishdate":"2018-05-21","permalink":"https://hybridego.github.io/2018/05/21/algolia-integration-with-jekyll/","relpermalink":"/2018/05/21/algolia-integration-with-jekyll/","section":"post"},{"objectID":"8160a1bd8df0fbf81c4f36a3c6e7d3af","title":"Helm을 사용하여 Kubernetes에 배포하는 방법","tags":["Kubernetes","Helm"],"categories":["Tech"],"description":"Helm을 사용하여 Kubernetes에 배포하는 방법","summary":"\u003ch2 id=\"helm이란\"\u003eHelm이란?\u003c/h2\u003e\n\u003cp\u003eHelm은 Kubernetes 애플리케이션을 관리하는 도구입니다. Helm은 Kubernetes 애플리케이션을 패키징하고 배포하는 데 사용됩니다. Helm은 Kubernetes 애플리케이션을 쉽게 설치, 업그레이드, 롤백할 수 있도록 도와줍니다.\u003c/p\u003e","date":"2018-04-16","publishdate":"2018-04-16","permalink":"https://hybridego.github.io/2018/04/16/using-helm-to-deploy-to-kubernetes/","relpermalink":"/2018/04/16/using-helm-to-deploy-to-kubernetes/","section":"post"},{"objectID":"10512631762a4eb4fe14a47b7cb61d54","title":"서비스 메시 vs API 게이트웨이 관계 탐구 (번역)","tags":["Microservice","Service Mesh","API Gateway"],"categories":["Tech"],"description":"API 게이트웨이와 서비스 메시의 관계는 제가 최근에 계속 고민해왔던 문제이며, 동료 및 커뮤니티 친구들과도 몇 차례 논의했습니다. 이 짧은 글은 둘 사이의 유사점과 마이크로서비스 아키텍처에서 이 둘의 다른 용도를 명확하게 요약합니다.","summary":"\u003ch2 id=\"서비스-메시-vs-api-게이트웨이\"\u003e서비스 메시 vs API 게이트웨이\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://medium.com/microservices-in-practice/service-mesh-for-microservices-2953109a3c9a\"\u003e이전 서비스 메시 관련 글\u003c/a\u003e에서 저는 서비스 메시와 API 게이트웨이 간의 관계에 대한 몇 가지 질문을 언급했습니다. 이 글에서는 서비스 메시와 API 게이트웨이의 용도에 대해 더 자세히 논의할 예정입니다.\u003c/p\u003e","date":"2018-04-11","publishdate":"2018-04-11","permalink":"https://hybridego.github.io/2018/04/11/service-mesh-vs-api-gateway-ko/","relpermalink":"/2018/04/11/service-mesh-vs-api-gateway-ko/","section":"post"},{"objectID":"58e1fcbb286268d60015d8695e72e3b4","title":"마이크로서비스 아키텍처의 인프라: 서비스 메시와 Istio에 대해 이야기하다","tags":["Microservice","Service Mesh","Istio"],"categories":["Tech"],"description":"아키텍처 패턴으로서 마이크로서비스는 복잡한 시스템을 수십에서 수백 개의 작은 서비스로 분할하며, 각 서비스는 독립적인 비즈니스 로직을 구현합니다. 이러한 작은 서비스는 소규모 소프트웨어 엔지니어링 팀이 이해하고 수정하기 쉽고, 언어 및 프레임워크 선택의 유연성을 제공하며, 애플리케이션 …","summary":"\u003ch2 id=\"마이크로서비스-아키텍처의-진화\"\u003e마이크로서비스 아키텍처의 진화\u003c/h2\u003e\n\u003cp\u003e아키텍처 패턴으로서 마이크로서비스는 복잡한 시스템을 수십에서 수백 개의 작은 서비스로 분할하며, 각 서비스는 독립적인 비즈니스 로직을 구현합니다. 이러한 작은 서비스는 소규모 소프트웨어 엔지니어링 팀이 이해하고 수정하기 쉽고, 언어 및 프레임워크 선택의 유 …\u003c/p\u003e","date":"2018-03-29","publishdate":"2018-03-29","permalink":"https://hybridego.github.io/2018/03/29/what-is-service-mesh-and-istio/","relpermalink":"/2018/03/29/what-is-service-mesh-and-istio/","section":"post"},{"objectID":"98b8057999561a04d562f017fde4df05","title":"HTTP 프록시 뒤에서 Docker를 사용하는 방법","tags":["Tips","Docker"],"categories":["Tips"],"description":"HTTP 프록시 뒤에서 Docker를 사용하는 방법","summary":"\u003ch2 id=\"ubuntu\"\u003eUbuntu\u003c/h2\u003e\n\u003ch3 id=\"docker에서-http-프록시-설정\"\u003eDocker에서 HTTP 프록시 설정\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\n    \u003cdiv class=\"code-toolbar\"\u003e\n        \u003cbutton class=\"copy-code-button\" title=\"Copy to clipboard\"\u003e\n            \u003ci class=\"fas fa-copy\"\u003e\u003c/i\u003e\n        \u003c/button\u003e\n    \u003c/div\u003e\n    \u003cpre\u003e\u003ccode class=\"\"\u003esudo /etc/default/docker\n\nexport http_proxy=\u0026#34;http://127.0.0.1:3128/\u0026#34;\nexport …\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","date":"2018-03-13","publishdate":"2018-03-13","permalink":"https://hybridego.github.io/2018/03/13/use-docker-behind-http-proxy/","relpermalink":"/2018/03/13/use-docker-behind-http-proxy/","section":"post"},{"objectID":"2d0e4272390337188b486ff2335caebb","title":"Vim 팁","tags":["Tips","Vim"],"categories":["Tips"],"description":"Vim 팁과 트릭","summary":"\u003ch2 id=\"vim-그래픽-치트-시트\"\u003evim 그래픽 치트 시트\u003c/h2\u003e\n\u003cp\u003e\n  \u003cimg src=\"//img/2018-02-09-vim-tips/vi-vim-cheat-sheet.svg\" alt=\"\"\u003e\n\n\u003c/p\u003e","date":"2018-02-09","publishdate":"2018-02-09","permalink":"https://hybridego.github.io/2018/02/09/vim-tips/","relpermalink":"/2018/02/09/vim-tips/","section":"post"},{"objectID":"92d7e3e34329f74a5a955e31f5743bae","title":"sudo 없이 Docker 명령을 실행하는 방법","tags":["Tips","Docker"],"categories":["Tips"],"description":"sudo 없이 Docker 명령을 실행하는 방법","summary":"\u003ch3 id=\"docker-그룹이-아직-존재하지-않으면-추가합니다\"\u003eDocker 그룹이 아직 존재하지 않으면 추가합니다:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003esudo groupadd docker\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"연결된-사용자-user를-docker-그룹에-추가합니다-현재-사용자를-사용하지-않으려면-사용자-이름을-원하는-사용자와-일치하도록-변경하십시오\"\u003e연결된 사용자 \u0026ldquo;$USER\u0026quot;를 docker 그룹에 추가합니다. 현재 사용자를 사용하지 않으려면 사용자 이름을 원하는 사용자와 일치하도록 변경하십시오:\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003esudo gpasswd …\u003c/code\u003e\u003c/p\u003e","date":"2018-02-09","publishdate":"2018-02-09","permalink":"https://hybridego.github.io/2018/02/09/docker-without-sudo/","relpermalink":"/2018/02/09/docker-without-sudo/","section":"post"},{"objectID":"c1d32da205ea082b3dd7061c39ea7e8b","title":"안전한 마이크로서비스 애플리케이션을 구축하는 방법은?","tags":["Microservice","Security"],"categories":["Tech"],"description":"마이크로서비스 아키텍처의 도입은 소규모 개발팀, 개발 주기 단축, 언어 선택의 유연성, 서비스 확장성 향상 등 소프트웨어 애플리케이션에 많은 이점을 가져다주었습니다. 동시에 분산 시스템의 복잡한 문제들도 함께 도입되었습니다. 그중 하나의 과제는 마이크로서비스 아키텍처에서 유연하고 안전하 …","summary":"\u003ch2 id=\"서론\"\u003e서론\u003c/h2\u003e\n\u003cp\u003e마이크로서비스 아키텍처의 도입은 소프트웨어 애플리케이션에 많은 이점을 가져다주었습니다: 소규모 개발팀, 개발 주기 단축, 언어 선택의 유연성, 서비스 확장성 향상 등. 동시에 분산 시스템의 복잡한 문제들도 함께 도입되었습니다. 그중 하나의 과제는 마이크로서비스 아키텍처에서 유연하고 …\u003c/p\u003e","date":"2018-02-03","publishdate":"2018-02-03","permalink":"https://hybridego.github.io/2018/05/22/user_authentication_authorization/","relpermalink":"/2018/05/22/user_authentication_authorization/","section":"post"},{"objectID":"f12f8e4e5417662ca5f2745b62aadb1e","title":"Nginx 오픈소스 서비스 메시 컴포넌트 Nginmesh 설치 가이드","tags":["Istio","service Mesh","nginmesh"],"categories":["Tech"],"description":"Nginmesh는 Istio 서비스 메시 플랫폼의 데이터 플레인 프록시로 사용되는 NGINX의 오픈소스 서비스 메시 프로젝트입니다. 이는 7계층 로드 밸런싱 및 서비스 라우팅 기능을 제공하며, Istio와 사이드카로 통합되어 \u0026#39;표준적이고 안정적이며 안전한 방식\u0026#39;으로 서비스 간 통신을 용 …","summary":"\u003ch2 id=\"서문\"\u003e서문\u003c/h2\u003e\n\u003cp\u003eNginmesh는 Istio 서비스 메시 플랫폼의 데이터 플레인 프록시로 사용되는 NGINX의 오픈소스 서비스 메시 프로젝트입니다. 이는 7계층 로드 밸런싱 및 서비스 라우팅 기능을 제공하며, Istio와 사이드카로 통합되어 \u0026lsquo;표준적이고 안정적이며 안전한 방식 …\u003c/p\u003e","date":"2018-01-02","publishdate":"2018-01-02","permalink":"https://hybridego.github.io/2018/01/02/nginmesh-install/","relpermalink":"/2018/01/02/nginmesh-install/","section":"post"},{"objectID":"62314fd01037305fcf6b8c9ad3b3b02d","title":"Kubernetes 클러스터 외부에서 애플리케이션에 접근하는 방법은 무엇인가요?","tags":["Kubernetes"],"categories":["Tech"],"description":"Kubernetes의 클러스터 네트워크는 사설 네트워크에 속하며, 배포된 애플리케이션은 클러스터 네트워크 내부에서만 접근할 수 있다는 것을 알고 있습니다. 그렇다면 Kubernetes 클러스터의 애플리케이션을 외부 네트워크에 노출하여 외부 사용자에게 서비스를 제공하는 방법은 무엇일까요? …","summary":"\u003ch2 id=\"서론\"\u003e서론\u003c/h2\u003e\n\u003cp\u003eKubernetes의 클러스터 네트워크는 사설 네트워크에 속하며, 배포된 애플리케이션은 클러스터 네트워크 내부에서만 접근할 수 있다는 것을 알고 있습니다. 그렇다면 Kubernetes 클러스터의 애플리케이션을 외부 네트워크에 노출하여 외부 사용자에게 서비스를 제공하는 방법은 무엇일 …\u003c/p\u003e","date":"2017-11-28","publishdate":"2017-11-28","permalink":"https://hybridego.github.io/2017/11/28/access-application-from-outside/","relpermalink":"/2017/11/28/access-application-from-outside/","section":"post"},{"objectID":"320d9f0641802d90086c08b5cf554c4d","title":"Istio를 이용한 카나리 릴리스(Canary Release) 구현","tags":["Istio"],"categories":["Tech"],"description":"애플리케이션이 출시된 후, 운영팀이 직면하는 큰 과제 중 하나는 기존 서비스에 영향을 주지 않으면서 업그레이드를 수행하는 방법입니다. 이 문서에서는 Istio를 사용하여 애플리케이션의 카나리 릴리스를 구현하는 방법을 소개합니다.","summary":"\u003ch2 id=\"카나리-릴리스canary-release-소개\"\u003e카나리 릴리스(Canary Release) 소개\u003c/h2\u003e\n\u003cp\u003e애플리케이션이 출시된 후, 운영팀이 직면하는 큰 과제 중 하나는 기존 서비스에 영향을 주지 않으면서 업그레이드를 수행하는 방법입니다. 제품을 개발해 본 사람이라면 누구나 알겠지만, 출시 전에 아무리 완벽한 자동화 및 수동 테스트를 거쳤더라 …\u003c/p\u003e","date":"2017-11-08","publishdate":"2017-11-08","permalink":"https://hybridego.github.io/2017/11/08/istio-canary-release-ko/","relpermalink":"/2017/11/08/istio-canary-release-ko/","section":"post"},{"objectID":"5ae8190e8b21dc18fae6ba6a26ad2f8e","title":"Istio를 사용하여 애플리케이션 트래픽 전환 구현","tags":["Istio"],"categories":["Tech"],"description":"이 작업은 애플리케이션 트래픽을 이전 버전의 서비스에서 새 버전으로 점진적으로 마이그레이션하는 방법을 보여줍니다. Istio를 통해 다양한 가중치 규칙(10%, 20%, ··· 100%)을 사용하여 트래픽을 이전 버전 서비스에서 새 버전 서비스로 원활하게 마이그레이션할 수 있습니다.","summary":"\u003cp\u003eIstio에 대한 더 많은 내용은 \u003ca href=\"http://istio.doczh.cn/\"\u003eIstio 중국어 문서\u003c/a\u003e를 참조하십시오.\u003c/p\u003e\n\u003cp\u003e원문은 \u003ca href=\"https://istio.io/docs/tasks/traffic-management/traffic-shifting.html\"\u003eTraffic Shifting\u003c/a\u003e을 참조하십시오.\u003c/p\u003e\n\u003cp\u003e이 작업은 애플리케이션 트래픽을 이전 버전의 서비스에서 새 버전으로 점진적으로 마이그레이션하는 방법을 보여줍니다. Istio를 통해 다양한 가중치 규칙(10%, …\u003c/p\u003e","date":"2017-11-07","publishdate":"2017-11-07","permalink":"https://hybridego.github.io/2017/11/07/istio-traffic-shifting/","relpermalink":"/2017/11/07/istio-traffic-shifting/","section":"post"},{"objectID":"d993f98f09d7341809e97a3c1ba8e960","title":"Istio 및 Bookinfo 예제 프로그램 설치 및 사용 후기","tags":["Istio"],"categories":["Tech"],"description":"Istio는 Google, IBM, Lyft에서 개발한 서비스 메시(Service Mesh) 오픈 소스 프로젝트로, Google이 Kubernetes에 이어 내놓은 또 하나의 걸작입니다. 이 글에서는 베어 메탈에서 Istio 및 Bookinfo 예제 프로그램을 처음부터 구축하는 방법을 …","summary":"\u003ch2 id=\"서비스-메시-소개\"\u003e서비스 메시 소개\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e서비스 메시\u003c/strong\u003e(Service Mesh)는 마이크로서비스 통신 및 관리를 해결하기 위해 등장한 \u003cstrong\u003e아키텍처 패턴\u003c/strong\u003e입니다.\u003c/p\u003e\n\u003cp\u003e서비스 메시는 서비스 간 통신 및 관련 관리 제어 기능을 비즈니스 프로그램에서 인프라 계층으로 이동시켜 비즈니스 로직과 서비스 통신이라는 두 가지 관심사를 …\u003c/p\u003e","date":"2017-11-04","publishdate":"2017-11-04","permalink":"https://hybridego.github.io/2017/11/04/istio-install_and_example/","relpermalink":"/2017/11/04/istio-install_and_example/","section":"post"},{"objectID":"cf37d97d83d29e7c3f79c50c928a7a4d","title":"Welcome to Lionel Blog","tags":[],"categories":[],"description":"\u003cblockquote\u003e\n\u003cp\u003e“Yeah It\u0026rsquo;s on. ”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"hello-world\"\u003eHello World!\u003c/h2\u003e","summary":"\u003cblockquote\u003e\n\u003cp\u003e“Yeah It\u0026rsquo;s on. ”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"hello-world\"\u003eHello World!\u003c/h2\u003e","date":"2017-11-04","publishdate":"2017-11-04","permalink":"https://hybridego.github.io/2017/11/03/hello-world/","relpermalink":"/2017/11/03/hello-world/","section":"post"}]