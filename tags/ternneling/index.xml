<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ternneling on Lionel Blog</title><link>https://hybridego.github.io/tags/ternneling/</link><description>Recent content in Ternneling on Lionel Blog</description><generator>Hugo</generator><language>ko-kr</language><lastBuildDate>Wed, 18 Jun 2025 16:16:23 +0900</lastBuildDate><atom:link href="https://hybridego.github.io/tags/ternneling/index.xml" rel="self" type="application/rss+xml"/><item><title>vscode remoteSSH용 docker 생성</title><link>https://hybridego.github.io/2025/06/18/VSCode-RemoteSSH-Docker/</link><pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate><guid>https://hybridego.github.io/2025/06/18/VSCode-RemoteSSH-Docker/</guid><description>&lt;h1 id="vscode-remotessh용-docker-생성"&gt;vscode remoteSSH용 docker 생성&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;사용자에게 docker 권한 부여하기&lt;/p&gt;
&lt;div class="highlight"&gt;
 &lt;div class="code-toolbar"&gt;
 &lt;button class="copy-code-button" title="Copy to clipboard"&gt;
 &lt;i class="fas fa-copy"&gt;&lt;/i&gt;
 &lt;/button&gt;
 &lt;/div&gt;
 &lt;pre&gt;&lt;code class=""&gt;sudo usermod -aG docker $USER
newgrp docker&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dockerfile 작성&lt;/p&gt;
&lt;div class="highlight"&gt;
 &lt;div class="code-toolbar"&gt;
 &lt;button class="copy-code-button" title="Copy to clipboard"&gt;
 &lt;i class="fas fa-copy"&gt;&lt;/i&gt;
 &lt;/button&gt;
 &lt;/div&gt;
 &lt;pre&gt;&lt;code class=""&gt;FROM ubuntu:24.04

# Install required packages for minimal build environment and requested tools
RUN apt-get update &amp;amp;&amp;amp; \
 apt-get install -y \
 build-essential \
 cmake \
 clang-tidy \
 git \
 vim \
 sudo \
 zsh \
 openssh-server \
 locales &amp;amp;&amp;amp; \
 apt-get clean &amp;amp;&amp;amp; \
 rm -rf /var/lib/apt/lists/*

# Configure locale
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

# Create user and group (여기에서 1016 은 기존 서버의 userid 번호를 써줍니다.)
RUN groupadd -g 1016 lionelj &amp;amp;&amp;amp; \
 useradd -u 1016 -g 1016 -m -s /bin/zsh lionelj &amp;amp;&amp;amp; \
 usermod -aG sudo lionelj

# Configure SSH
RUN ssh-keygen -A &amp;amp;&amp;amp; \
 chmod 600 /etc/ssh/ssh_host_* &amp;amp;&amp;amp; \
 chown root:root /etc/ssh/ssh_host_* &amp;amp;&amp;amp; \
 mkdir -p /var/run/sshd &amp;amp;&amp;amp; \
 chmod 0755 /var/run/sshd &amp;amp;&amp;amp; \
 echo &amp;#34;lionelj ALL=(ALL) NOPASSWD:ALL&amp;#34; &amp;gt;&amp;gt; /etc/sudoers.d/lionelj &amp;amp;&amp;amp; \
 chmod 0440 /etc/sudoers.d/lionelj &amp;amp;&amp;amp; \
 sed -i &amp;#39;s/#Port 22/Port 2222/&amp;#39; /etc/ssh/sshd_config &amp;amp;&amp;amp; \
 echo &amp;#34;PasswordAuthentication yes&amp;#34; &amp;gt;&amp;gt; /etc/ssh/sshd_config &amp;amp;&amp;amp; \
 echo &amp;#39;lionelj:qwer&amp;#39; | chpasswd

# Expose SSH port
EXPOSE 2222

# Start SSH server in background and keep container running
RUN echo &amp;#39;#!/bin/bash\n\
 sudo /usr/sbin/sshd\n\
 if [ $? -ne 0 ]; then\n\
 echo &amp;#34;Failed to start sshd&amp;#34;\n\
 exit 1\n\
 fi\n\
 tail -f /dev/null&amp;#39; &amp;gt; /start.sh &amp;amp;&amp;amp; \
 chmod &amp;#43;x /start.sh

CMD [&amp;#34;/start.sh&amp;#34;]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;docker build&lt;/p&gt;</description></item></channel></rss>